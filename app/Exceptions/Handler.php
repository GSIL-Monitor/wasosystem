<?php

namespace App\Exceptions;

use App\Models\CompleteMachineFrameworks;
use App\Models\Integration;
use Exception;
use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler;
use Symfony\Component\HttpKernel\Exception\HttpException;

class Handler extends ExceptionHandler
{
    /**
     * A list of the exception types that are not reported.
     *
     * @var array
     */
    protected $dontReport = [
        //
    ];

    /**
     * A list of the inputs that are never flashed for validation exceptions.
     *
     * @var array
     */
    protected $dontFlash = [
        'password',
        'password_confirmation',
    ];

    /**
     * Report or log an exception.
     *
     * This is a great spot to send exceptions to Sentry, Bugsnag, etc.
     *
     * @param  \Exception  $exception
     * @return void
     */
    public function report(Exception $exception)
    {
        parent::report($exception);
    }

    /**
     * Render an exception into an HTTP response.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \Exception  $exception
     * @return \Illuminate\Http\Response
     */
    public function render($request, Exception $exception)
    {

       if($this->isHttpException($exception)){
           return $this->renderHttpException($exception);
       }else{
           return parent::render($request, $exception);
       }
    }
    protected  function renderHttpException(HttpException $e)
    {

        if(view()->exists('errors.'.$e->getStatusCode())){
            $common_solutions=Integration::get(['id','name']);
            $complete_machines=CompleteMachineFrameworks::where(function($query){
                $query->orWhere('parent_id',1)
                      ->orWhere('parent_id',2);
            })->where('category','framework')->get(['id','name']);
         return response()->view('errors.'.$e->getStatusCode(),compact('common_solutions','complete_machines'),$e->getStatusCode());
        }else{
            return parent::renderHttpException($e); // TODO: Change the autogenerated stub
        }

    }
}
